; Export with only some value (id, title, summary, etc.)
; Example call:
;   - /api/run/sub-resources-co-occurrences-asterplot/aHOZ/dqff ('aHOZ' being the field identifier of the main resource,
;                                                      'dqff' is the field containing the name of the element to compare)
;

prepend = delegate?file=../worker.ini
mimeType = application/json
label = Get all element in relation with the current one

[use]
plugin = basics
plugin = lodex
plugin = analytics

[buildContext]
connectionStringURI = get('connectionStringURI')

; Keep some env variable
[env?singleton]
path = minValue
value = env('minValue').parseInt().defaultTo(0)

path = maxValue
value = env('maxValue').parseInt().defaultTo(1000000)

path = maxSize
value = env('maxSize').parseInt().defaultTo(10)

path = reverse
value = env('orderBy').split('/').get(1).replace('asc', 0).replace('desc', 1).parseInt()

path = tuneBy
value = env('orderBy').split('/').get(0).replace('_id', 'id')

path = fields
value = get('fields')

path = host
value = get('host')

[assign]
path = matchField
value = env('field.0')

path = joinField
value = env('field.1')

path = referer.connectionStringURI
value = get('connectionStringURI')

path = referer.source
value = env('uri')

path = filter.subresourceId
value = fix({ '$exists': true })

[LodexAggregateQuery]
stage = fix([ `$project: { _id: 1, matchValue: '$versions.${self.joinField}' }`, `$unwind: '$matchValue'` ])

[assign]
path = connectionStringURI
value = get('referer.connectionStringURI')

; Get filtered data
; env('field.0') => aHOZ
; env('field.1') => dqff
[LodexJoinQuery]
matchField = env('field.0')
joinField = env('field.1')

[debug]

[filterVersions]
[filterContributions]

; find the fields which are selected for title and summary
[assign]
path = titleFieldName
value = env('field.1')

path = host
value = env('host')

path = sourceUri
value = get('referer.source')

path = total
value = get('total')

[assign]
path = source
value = pick(['host', 'sourceUri']).values().join('/')

path = target_title
value = get(self.titleFieldName).toString()

path = target
value = pick(['host', 'uri']).values().join('/')

path = weight
value = fix(self.count / self.total)

[assign]
path = weights
value = fix([self.weight])

; Send only a part of the data
[slice]
start = 1
size = env('maxSize')

; Keep only the necessary data
[keep]
path = source
path = target
path = target_title
path = weight
path = weights
path = total

[LodexOutput]
indent = true
extract = total
extract = maxSize
extract = maxValue
extract = minValue
