;
; Exemple d'appel :
;   - /api/run/classif-by/i31i/fZYs/
;
mimeType = application/json
label = classif-by

[use]
plugin = analytics
plugin = lodex
plugin = storage

[env?single]
path = total
value = get('total').parseInt().defaultTo(0)

path = minValue
value = env('minValue').parseInt().defaultTo(0)

path = maxValue
value = env('maxValue').parseInt().defaultTo(1000000)

path = maxSize
value = env('maxSize').parseInt().defaultTo(10)

path = reverse
value = env('orderBy').split('/').get(1).replace('asc', 1).replace('desc', 0).parseInt()

path = tuneBy
value = env('orderBy').split('/').get(0).replace('_id', 'id')

; Récupération des documents séléctionnés
[boost]
file = ../datasources/mongodb.ini

; on explose le flux en fonction des champs source et target
[exploding]
id = env('field.0')
value = env('field.1')

; On filtre les valeurs minimales
[greater]
than = env('minValue')

; On filtre les valeurs minimales
[less]
than = env('maxValue')

; On calcul un score pour permettre le tri
[tune]
path = env('tuneBy', 'value')

; On tri
[sort]
reverse = env('reverse')

; On garde uniqument les valeurs (donc on supprime les informations qui ont permis le tri)
[value]

; On envoit au client uniquement les premiers documents
[slice]
start = 1
size = env('maxSize')

; On prépare le json de sortie
[replace]
path = source
value = get('id')

path = target
value = get('value.Nom')

path = weight
value = get('value.Poids')

path = total
value = env('total')

path = maxSize
value = env('maxSize')

path = minValue
value = env('minValue')

path = maxValue
value = env('maxValue')

# On génére le json de sortie
[LodexOutput]
indent = true
extract = total
extract = maxSize
extract = maxValue
extract = minValue
