# Reduce to distinct values from one or more fields

prepend = delegate?file=../worker.ini
mimeType = application/json
label = distinct

[use]
plugin = basics
plugin = lodex
plugin = analytics

[buildContext]
connectionStringURI = get('connectionStringURI')

; On garde dans l'environnement quelques paramètres
[env?single]
path = minValue
value = env('minValue').parseInt().defaultTo(0)

path = maxValue
value = env('maxValue').parseInt().defaultTo(1000000)

path = maxSize
value = env('maxSize').parseInt().defaultTo(10)

path = reverse
value = env('orderBy').split('/').get(1).replace('asc', 0).replace('desc', 1).parseInt()

path = tuneBy
value = env('orderBy').split('/').get(0).replace('_id', 'id')

; On récupére les documents filtrés
[LodexRunQuery]

; On supprime les infos inutiles
[filterVersions]
[filterContributions]

; on explose le flux en fonction des champs source et target
[distinct]
path = env('field.0')

; on regroupe par champ identique
[reducing]

; on compte le nombre de valeur regroupée pour chaque champ identique
[summing]

; On filtre les valeurs minimales
[greater]
than = env('minValue')

; On filtre les valeurs minimales
[less]
than = env('maxValue')

; On calcul un score pour permettre le tri
[tune]
path = env('tuneBy', 'value')

; On tri
[sort]
reverse = env('reverse')

; On garde uniqument les valeurs (donc on supprime les informations qui ont permis le tri)
[value]

; On envoit au client uniquement les premiers documents
[slice]
start = 1
size = env('maxSize')

; On calcul des pourcentages uniquement sur le résulat
[statistics]
target = statistics
path = value

; On prépare le json de sortie
[replace]
path = statistics
value = get('statistics.value').omit(['sample', 'frequency', 'percentage'])

path = _id
value = get('id')

path = value
value = get('statistics.value.percentage')

path = parameters.maxSize
value = env('maxSize')

path = parameters.minValue
value = env('minValue')

path = parameters.maxValue
value = env('maxValue')


[LodexOutput]
indent = true
extract = statistics
extract = parameters

