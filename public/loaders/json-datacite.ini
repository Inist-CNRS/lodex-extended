append = dump
label = json-datacite

[use]
plugin = basics
plugin = lodex
plugin = analytics
plugin = storage

[JSONParse]
separator = data.*

[OBJFlatten]
separator = /


# {{{ Enrichissement des creators
[expand]
size = 1
path = attributes/creators

[expand/exploding]

[expand/assign]
path = value.cnrs
value = get('value.affiliation').some((cur) => cur.includes('CNRS'))

[expand/assign]
path = value.rnsr
value = get('value.affiliation')

[expand/expand]
path = value.rnsr
size = 1000

[expand/expand/URLConnect]
url = https://affiliations-rnsr.services.inist.fr/v1/json
timeout = 10000
noerror = true

[expand/aggregate]
# }}}


# {{{ Enrichissement des contributors
[expand]
size = 1
path = attributes/contributors

[expand/exploding]

[expand/assign]
path = value.cnrs
value = get('value.affiliation').some((cur) => cur.includes('CNRS'))

[expand/assign]
path = value.rnsr
value = get('value.affiliation')

[expand/expand]
path = value.rnsr
size = 1000

[expand/expand/URLConnect]
url = https://affiliations-rnsr.services.inist.fr/v1/json
timeout = 10000
noerror = true

[expand/aggregate]
# }}}



# Copie des champs title default at abstract dans la clé categorization
[assign]
path = classement
value = fix(`${_.get(self, 'attributes/titles.0.title', '')}.${_.get(self, 'attributes/descriptions.0.description', '')}`)

# Application au contenu de la clé catégorization le classifier FT2C
[expand]
path = classement
size = 100

[expand/URLConnect]
url = http://ft2c-01.tdmservices.intra.inist.fr/predict
timeout = 10000
noerror = true

# Récuperation des verbalisations sous forme de liste [niveau1, niveau2, niveau3]
[assign]
path = classement
value = get('classement').map((level)=>(level.code.value).replace(/\.$/, "")).join('| ')

path = uri
value = get('id')

[swing]
test = pick(['URI', 'uri']).isEmpty()
[swing/identify]
