append = dump
label = json-istex

[use]
plugin = basics
plugin = lodex
plugin = storage

[JSONParse]
; separator = hits.*
separator = *

; [OBJFlatten]
; separator = /

[replace]
; ; path = uri
; ; value = get('arkIstex') # Find the true identifier

path = authors affiliations address
value = get('authors').map(function (author) { return author.affiliations ? author.affiliations.flatMap(function(affiliation) { return affiliation.address ? [affiliation.address] : []; }) : []; })

path = authors affiliations idRef
value = get('authors').map(function (author) { return author.affiliations ? author.affiliations.flatMap(function(affiliation) { return affiliation.idRef ? [affiliation.idRef] : []; }) : []; })

path = authors affiliations isni
value = get('authors').map(function (author) { return author.affiliations ? author.affiliations.flatMap(function(affiliation) { return affiliation.isni ? [affiliation.isni] : []; }) : []; })

path = authors affiliations rnsr
value = get('authors').map(function (author) { return author.affiliations ? author.affiliations.flatMap(function(affiliation) { return affiliation.rnsr ? [affiliation.rnsr] : []; }) : []; })

path = authors enrichments idHal
value = get('authors').flatMap(function (author) { return author.enrichments ? author.enrichments.flatMap(function(enrichment) { return enrichment.idHal ? [enrichment.idHal] : []; }) : []; })

path = authors enrichments idRef
value = get('authors').flatMap(function (author) { return author.enrichments ? author.enrichments.flatMap(function(enrichment) { return enrichment.idRef ? [enrichment.idRef] : []; }) : []; })

path = authors enrichments orcId
value = get('authors').flatMap(function (author) { return author.enrichments ? author.enrichments.flatMap(function(enrichment) { return enrichment.orcId ? [enrichment.orcId] : []; }) : []; })

path = authors forename & authors surname
value = get('authors').map(function (author) { return author.fullname; })

path = authors halAuthorId
value = get('authors').flatMap(function (author) { return author.halAuthorId ? [author.halAuthorId] : []; })

path = authors idHal
value = get('authors').flatMap(function (author) { return author.idHal ? [author.idHal] : []; })

path = authors idRef
value = get('authors').flatMap(function (author) { return author.idRef ? [author.idRef] : []; })

path = authors isni
value = get('authors').flatMap(function (author) { return author.isni ? [author.isni] : []; })

path = authors orcId
value = get('authors').flatMap(function (author) { return author.orcId ? [author.orcId] : []; })

path = authors researcherId
value = get('authors').flatMap(function (author) { return author.researcherId ? [author.researcherId] : []; })

path = authors viaf
value = get('authors').flatMap(function (author) { return author.viaf ? [author.viaf] : []; })

path = documentType
value = get("originalGenre")

path = doi
value = get("doi")

path = duplicates source
value = get("origins.sources", [])

path = duplicates sourceUid
value = get("sourceUids", [])

path = eisbn
value = get("host.eisbn")

path = eissn
value = get("host.eissn")

path = enrichments classifications hal
value = get("classifications.enrichments.hal", {})

path = enrichments oa unpaywall
value = get("enrichments.openAcess.unpaywall", {})

path = issn
value = get("host.issn")

path = issue
value = get("host.issue")

path = keywords en mesh
value = get("keywords.en.mesh", [])

path = language
value = get("host.language", [])

path = pageRange
value = get("host.pages").flatMap(page => page.range ? [page.range] : [])

path = pii
value = get("pii")

path = pmId
value = get("pmId")

path = publicationDate
value = get("host.publicationDate")

path = title default
value = get("title.default")

path = title en
value = get("title.en")

path = title fr
value = get("title.fr")

path = title journal
value = get("host.title")

path = volume
value = get("host.volume")

[standardize]

[swing]
test = pick(['URI', 'uri']).pickBy(_.identity).isEmpty()
[swing/identify]
