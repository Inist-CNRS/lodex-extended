append = dump?indent=true
label = json-protege

[use]
plugin = basics
plugin = analytics
plugin = lodex

[JSONParse]
separator = *


[bufferize]
path = bufferID

[filter]
path = @type.0
if = http://www.w3.org/2002/07/owl#Class

[env]
path = bufferID
value = get('bufferID')

[expand]
path = http://www.w3.org/2000/01/rdf-schema#subClassOf

[expand/exploding]

[expand/combine]
path = value.@id
primer = env('bufferID')
prepend = buffers

[expand/combine/replace]
path = id
value = get('@id')
path = value
value = self().omit('bufferID')

; [expand/combine/OBJFlatten]
; safe = false
[expand/combine/exchange]
value = self()
[expand/combine/assign]
path = value
value = get('value').mapValues((o) => Array.isArray(o) && o.length === 1 ? o[0] : o)


[expand/aggregate]

[exchange]
value = self().mapValues((o) => Array.isArray(o) && o.length === 1 ? o[0] : o)


[OBJFlatten]

[exchange]
value = self().omit('bufferID') \
        .mapKeys((value, key) => key \
            .replace(/(http:[^#]+#)|\/@id\/value|@|(http:\/\/[^\/]+\/)/g, '') \
		    .replace(/(id\/id)/g,'id')) \
        .mapValues((value, key) => (key.search(/(id|type)$/) === -1 || !value || typeof value !== 'string' \
			 ? value \
			 : value \
				 .replace(/(http:[^#]+#)|\/@id\/value|@|(http:\/\/[^\/]+\/)/g, '') \
				 .replace(/(id\/id)/g,'id')))




[objects2columns]
