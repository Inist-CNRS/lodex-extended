# Necessary plugins
[use]
plugin = basics
plugin = analytics
plugin = storage

# Flow configuration
[JSONParse]
separator = *

[bufferize]

# On réalise un mapping dynamique sur le champ value (et on sauvegarde les correspondances trouvées)
[combine]
path = env('path', 'value')
primer = get('bufferID')
prepend = buffers
append = transit
persistent = true

# On crée un objet contenant tous les valeurs nécessaire pour créer une requete
[combine/replace]
path = query
value = fix('{getDataUPW(dois:\"', self.value, '\"){doi, is_oa}').reverse().join('')

[combine/URLConnect]
url = https://unpaywall.inist.fr/graphql
json  = true
timeout = 2000

# On supprime les réponses qui n'ont pas abouties (
[combine/drop]
path = unpaywall.is_oa

# On créé l'object attendu par combine { id, value } pour faire le mapping
[combine/replace]
path = id
value = get('doi')

path = value.doi
value = get('doi')

path = value.is_oa
value = get('unpaywall.is_oa', 'n/a')

# On nettoie l'objet en supprimant les champs temporaires
[exchange]
value = self().omit('bufferID')

# On simplifie la structure
[assign]
path = value
value = get('value.value', self.value)

[dump]
indent = env('indent', false)
