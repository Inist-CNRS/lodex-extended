# Context input/output
append = dump?indent=true

#Â OpenAPI Documentation - JSON format (dot notation)
post.responses.default.description = Return all objects form all terms in input
post.responses.default.content.application/json.schema.type = array
post.responses.default.content.application/json.schema.items.type = object
post.responses.default.content.application/json.schema.items.properties.id.type = string
post.responses.default.content.application/json.schema.items.properties.value.$ref = #/components/schemas/anyValue
post.summary = With one term form an array, find SKOS Concept for each items
post.requestBody.required = true
post.requestBody.content.application/json.schema.type = array
post.requestBody.content.application/json.schema.items.type = string
post.parameters.0.in = query
post.parameters.0.name = primer
post.parameters.0.schema.type = string
post.parameters.0.description = SKOS Scheme identifier 
post.parameters.1.in = query
post.parameters.1.name = indent
post.parameters.1.schema.type = boolean
post.parameters.1.description = Indent or not the JSON Result

# Necessary plugins
[use]
plugin = basics
plugin = analytics
plugin = storage

# Flow configuration
[JSONParse]
separator = *

[replace]
path = id
value = self()

path = value
value = self()

[combine]
path = value
primer = env('primer', 'loterre-sample').replace(/\W/g, '').concat('.skos').join('')
prepend = files
file = ./loterre-enrichments.ini

[dump]
indent = env('indent', false)
