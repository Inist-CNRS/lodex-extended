;
; Exemple d'appel : 
;   - /api/run/tree-of/sOfh/?maxSize=2
;   - /api/run/tree-of/ptPw/?maxSize=2
;
extension = js
mimeType = application/json
type = file
label = min

[use]
plugin = basics
plugin = analytics
plugin = ../statements

; On extrait le nom du champ
[replace]
path = field
value = get('path').trim('/').split('/').drop(1).head()

path = size
value = get('query.maxSize', 10)

; On récupére l'ensemblde des documents
[LodexDocuments]

; On supprime les infos inutiles
[filterVersions]
[filterContributions]

; On corrige plusieurs champs (même si on ne les utilise pas)
[assign]
path = $parameter
value = get('$parameter')

path = ankY
value = get('ankY').invokeMap(String.prototype.split, ' ; ')

path = XDQE
value = get('XDQE').invokeMap(String.prototype.split, ' ; ').map(function (i) { return _.invokeMap(i, String.prototype.slice, 4)})

path = FYbD
value = get('FYbD').invokeMap(String.prototype.split, ' ; ')

path = sOfh
value = get('sOfh').map(_.trim)

path = Vz5j
value = get('Vz5j').map(_.trim)

path = ptPw
value = get('ptPw').invokeMap(String.prototype.split, ' ; ')

path = HTNF
value = get('HTNF').map(_.trim)

; On met de coté quelques variables
[stuck?single]
path = $parameter

; On crée des segments hiérachiques
[segment]
aggregate = false
path = get('$parameter.field')

; On regroupe les segements
[reducing]
path = value

; On adlintionne le tout
[summing]
path = value

; On donne des noms explicites
[replace]
path = source
value = get('id.0')

path = target
value = get('id.1')

path = weight
value = get('value')

; On calcul un score pour permettre le tri
[tune]
path = value
method = numerical

; On tri 
[sort]
reverse = true

; On garde uniqument les valeurs (donc on supprime les informations qui ont permis le tri)
[value]

; on récupere les variable mise de coté
[unstuck]
path = $parameter

; On envoit au client unqiument les premiers documents
[slice]
start = 1
size = get('$parameter.size').parseInt()

; On garde seulement trois variables
[keep]
path = source
path = target
path = weight

[output]
