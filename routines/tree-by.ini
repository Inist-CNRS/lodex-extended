;
; Exemple d'appel :
;   - /api/run/tree-of/sOfh/?maxSize=2
;   - /api/run/tree-of/ptPw/?maxSize=2
;
extension = js
mimeType = application/json
type = file
label = tree-of

[use]
plugin = analytics
plugin = ../statements

; On récupére l'ensemble des documents
[LodexParseQuery]
[LodexRunQuery]

; On supprime les infos inutiles
[filterVersions]
[filterContributions]

; On garde dans l'environnement  le nombre total de documents
[env?single]
path = total
value = get('total')

; On crée des segments hiérachiques
[segment]
aggregate = false
path = env('fields.0')

; On regroupe les segements
[reducing]
path = value

; On adlintionne le tout
[summing]
path = value

; On donne des noms explicites
[replace]
path = source
value = get('id.0')

path = target
value = get('id.1')

path = weight
value = get('value')

; On calcul un score pour permettre le tri
[tune]
path = value
method = numerical

; On tri
[sort]
reverse = true

; On garde uniqument les valeurs (donc on supprime les informations qui ont permis le tri)
[value]

; On extrait les champs choisis
[replace]
path = source
value = get('source')

path = target
value = get('target')

path = weight
value = get('weight')

path = total
value = env('total')

; On envoit au client uniquement les premiers documents
[slice]
start = 1
size = env('maxSize', 10).parseInt()


# Generate JSON
[LodexOutput]
indent = true
extract = total
