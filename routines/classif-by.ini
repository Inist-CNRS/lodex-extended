;
; Exemple d'appel :
;   - /api/run/classif-by/i31i/fZYs/
;
extension = js
mimeType = application/json
type = file
label = classif-by

[use]
plugin = analytics
plugin = ../statements

; On prepare les filtres
[replace]
path = query.facets
value = get('query').omit(['minValue', 'maxValue', 'maxSize', 'orderBy', 'match', 'invertedFacets'])

path = query.match
value = get('query.match')

path = query.invertedFacets
value = get('query.invertedFacets')

; On récupére les documents filtrés
[LodexRunQuery]

; On supprime les infos inutiles
[filterVersions]
[filterContributions]

; On garde dans l'environnement quelques paramètres
[env?single]
path = total
value = get('total').parseInt().defaultTo(0)

path = minValue
value = env('minValue').parseInt().defaultTo(0)

path = maxValue
value = env('maxValue').parseInt().defaultTo(1000000)

path = maxSize
value = env('maxSize').parseInt().defaultTo(10)

; on explose le flux en fonction des champs source et target
[exploding]
id = env('fields.0')
value = env('fields.1')

; On envoit au client uniquement les premiers documents
[slice]
start = 1
size = env('maxSize')

; On prépare le json de sortie
[replace]
path = source
value = get('id')

path = target
value = get('value.Nom')

path = weight
value = get('value.Poids')

path = total
value = env('total')

path = maxSize
value = env('maxSize')

path = minValue
value = env('minValue')

path = maxValue
value = env('maxValue')

# On génére le json de sortie
[LodexOutput]
indent = true
extract = total
extract = maxSize
extract = maxValue
extract = minValue
