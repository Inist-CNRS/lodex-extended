# For one document selected by a URI (otherwise the first of the stream),
# and with one field on parameter, we build a vector from the initial document
# and all documents that shared one or more values of the field
#
# Be carful :  works only with @ezs/lodex > 1.0.1

mimeType = application/json
type = file
label = distinct

[use]
plugin = basics
plugin = lodex
plugin = analytics

; On garde dans l'environnement quelques paramètres
[env?single]
path = minValue
value = env('minValue').parseInt().defaultTo(0)

path = maxValue
value = env('maxValue').parseInt().defaultTo(1000000)

path = maxSize
value = env('maxSize').parseInt().defaultTo(10)

path = reverse
value = env('orderBy').split('/').get(1).replace('asc', 0).replace('desc', 1).parseInt()

path = uri
value = get('filter.uri')

[LodexRunQuery]

[shift]

[filterVersions]
[filterContributions]

[assign]
path = key
value = env('field.0')

[assign]
path = id
value = get('uri')

path = value
value = get(self.key)

[debug]

[replace]
path = fix('filter.', '["versions.0.', self.key, '"].', '$in').join('')
value = get('value').castArray()

path = connectionStringURI
value = env('connectionStringURI')

path = referer.id
value = get('uri')

path = referer.value
value = get('value')

path = referer.key
value = env('field.0')

[LodexRunQuery]

[env?single]
path = total
value = get('total').parseInt().defaultTo(0)

[filterVersions]
[filterContributions]

[assign]
path = values
value = get(self.referer.key)

[replace]
path = source
value = get('referer.id')

path = target
value = get('uri')

path = value
value = get('referer.value').map(function(val) { return _.indexOf(self.values, val) >= 0 ? 1 : 0; }).sum()

; On filtre les valeurs minimales
[greater]
than = env('minValue')

; On filtre les valeurs minimales
[less]
than = env('maxValue')

; On calcul un score pour permettre le tri
[tune]
path = env('tuneBy', 'value')

; On tri
[sort]
reverse = env('reverse')

; On garde uniqument les valeurs (donc on supprime les informations qui ont permis le tri)
[value]

; On envoit au client uniquement les premiers documents
[slice]
start = 1
size = env('maxSize')

; On prépare le json de sortie
[replace]
path = source
value = get('source')

path = target
value = get('target')

path = weight
value = get('value')

path = total
value = env('total')

path = maxSize
value = env('maxSize')

path = minValue
value = env('minValue')

path = maxValue
value = env('maxValue')

[InjectSyndicationFrom]
path = target

# On génére le json de sortie
[LodexOutput]
indent = true
extract = total
extract = maxSize
extract = maxValue
extract = minValue
