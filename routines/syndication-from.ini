; Expose metadata like JSON Feed
; Exemple d'appel :
;   - /api/run/syndication-from/XX3r/special-publications/
;
extension = js
mimeType = application/json
type = file
label = syndication-from

[use]
plugin = analytics
plugin = lodex

; On prepare les filtres
[replace]
path = query.facets
value = get('query').omit(['minValue', 'maxValue', 'maxSize', 'orderBy', 'match', 'invertedFacets'])

path = query.match
value = get('query.match')

path = query.invertedFacets
value = get('query.invertedFacets')

; On ajoute le filtre à destination de mongodb
; db.getCollection('publishedDataset').find({'versions.0.V7IG': 'rsc-metallobiology'})
[assign]
path = env('field.0').split('.').unshift('query','matchableFields').join('.')
value = env('field.1')

; On récupére les documents filtrés
[LodexRunQuery]

# On garde seulement la dernière version
[filterVersions]

; On supprime les contribution post publication
[filterContributions]

; On filtre a posteriori dans le cas ou le filtre a priori n'a pas été ajouté (lodex <= 9.3.9)
[filter]
path = env('field.0')
if = env('field.1')

[LodexContext?single]
target = $context

; On garde dans l'environnement quelques paramètres
[env?single]
path = total
value = get('total').parseInt().defaultTo(0)

path = minValue
value = env('minValue').parseInt().defaultTo(0)

path = maxValue
value = env('maxValue').parseInt().defaultTo(1000000)

path = maxSize
value = env('maxSize').parseInt().defaultTo(10)

path = reverse
value = env('orderBy').split('/').get(1).replace('asc', 0).replace('desc', 1).parseInt()

path = orderBy
value = env('orderBy').split('/').get(0).replace('_id', 'id')

[assign?single]
path = titleFieldName
value = env('fields').find({'overview':1}).get('name')

path = summaryFieldName
value = env('fields').find({'overview':2}).get('name')

path = host
value = env('host')

[assign]
path = id
value = get('uri')

path = value
value = get(self.titleFieldName).toString()

path = title
value = get(self.titleFieldName).toString()

path = summary
value = get(self.summaryFieldName).toString()

path = date_published
value = get('publicationDate')

path = url
value = pick(['host', 'uri']).values().join('/')

; On filtre les valeurs minimales
;[greater]
;than = env('minValue')

; On filtre les valeurs minimales
;[less]
;than = env('maxValue')

; On calcul un score pour permettre le tri
[tune]
path = env('orderBy', 'value')

; On tri
[sort]
reverse = env('reverse')

; On garde uniqument les valeurs (donc on supprime les informations qui ont permis le tri)
[value]

; On envoit au client uniquement les premiers documents
[slice]
start = 1
size = env('maxSize')

# see https://jsonfeed.org/version/1#items
[keep]
path = id
path = url
path = title
path = summary
path = date_published
path = total

[LodexOutput]
keyName = items
indent = true
extract = total
